// An assortment of Sass functions.
//
// Copyright (C) 2019 Damien Dart, <damiendart@pobox.com>.
// This file is distributed under the MIT licence. For more information,
// please refer to the accompanying "LICENCE" file.


// Returns a colour (currently black or white) that contrasts well
// against the provided color. For more information, please see:
//  - <https://webaim.org/resources/contrastchecker/> and
//  - <https://css-tricks.com/css-variables-calc-rgb-enforcing-high-contrast-colors/>.
@function contrasting-colour($colour) {
  $sum: (red($colour) * 299) + (green($colour) * 587) + (blue($colour) * 144);

  @if $sum > 128000 {
    @return #000000;
  }

  @return #ffffff;
}

// Returns the square root of the provided number using Newton's Method.
// For more information, please see:
// - <http://www.antimath.info/css/sass-sqrt-function/>,
// - <https://en.wikipedia.org/wiki/Newton%27s_method>, and
// - <https://css-tricks.com/snippets/sass/strip-unit-function/>.
@function sqrt($number) {
  $x: 1;

  @if type-of($number) == "number" and not unitless($number) {
    $number: $number / ($number * 0 + 1);
  }

  @for $i from 1 through 10 {
    $x: $x - ($x * $x - abs($number)) / (2 * $x);
  }

  @return $x;
}
